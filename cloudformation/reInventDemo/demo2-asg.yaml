AWSTemplateFormatVersion: '2010-09-09'
Description: Launch a scalable IIS environment based on a launch template, Application
  Load Balancer and Auto Scaling Group. Scaling handled by Lifecycle Hooks, EventBridge,
  and .NET Core 3.1 Lambda function.
Parameters:
  ImageIdParameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base
    Description: 'Enter an AMI Id. The default value is Windows Server 2019 Core:
      /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base.'
  InstanceTypeParameter:
    Type: String
    Default: t3.2xlarge
    AllowedValues:
      - t2.2xlarge
      - t3.2xlarge
      - m5.large
      - c5.large
    Description: Select an instance type. The default instance type is t3.2xlarge.
  LaunchTemplateSecurityGroupParameter:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Select EC2 security group to assign to the launch template.
  VpcIdParameter:
    Type: List<AWS::EC2::VPC::Id>
    Description: List of Virtual Private Cloud (VPC) Ids in your account.
  ELBSchemeParameter:
    Type: String
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
    Description: Select whether the ELB is internet-facing (public) or internal (private).
  ELBSubnetParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select EC2 subnets to assign to the ELB.
  ELBSecurityGroupParameter:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Select EC2 security group to assign to the ELB.
  SNSEndpointParameter:
    Type: String
    Description: Type the email address that will receive Auto Scaling notifications.
  ASGMinSizeParameter:
    Type: Number
    Description: Minimum instance size for the Auto Scaling Group.
  ASGMaxSizeParameter:
    Type: Number
    Description: Maximum instance size for the Auto Scaling Group.
  ASGDesiredCapacityParameter:
    Type: Number
    Description: Desired capacity instance size for the Auto Scaling Group.
  ASGSubnetParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select EC2 subnets to assign to the Auto Scaling Group.
  LifeCycleHookLambdaArn:
    Type: String
    Description: Lambda Triggered by ASG LifeCycle Hook.
  SSMInstanceProfileName:
    Type: String
    Description: Instance profile name needed for AWS Systems Manager.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Launch Template Configuration
        Parameters:
          - ImageIdParameter
          - InstanceTypeParameter
          - LaunchTemplateSecurityGroupParameter
      - Label:
          default: Elastic Load Balancer Configuration
        Parameters:
          - VpcIdParameter
          - ELBSchemeParameter
          - ELBSubnetParameter
          - ELBSecurityGroupParameter
      - Label:
          default: Amazon EC2 Auto Scaling Configuration
        Parameters:
          - SNSEndpointParameter
          - ASGDesiredCapacityParameter
          - ASGMinSizeParameter
          - ASGMaxSizeParameter
          - ASGSubnetParameter
    ParameterLabels:
      ImageIdParameter:
        default: Amazon Machine Image (AMI) Id
      InstanceTypeParameter:
        default: Instance Type
      LaunchTemplateSecurityGroupParameter:
        default: Security Group
      VpcIdParameter:
        default: Vpc Id
      ELBSchemeParameter:
        default: ELB Scheme
      ELBSecurityGroupParameter:
        default: Security Group
      ELBSubnetParameter:
        default: VPC Subnets
      SNSEndpointParameter:
        default: SNS Email Address
      ASGSubnetParameter:
        default: VPC Subnets
      ASGMinSizeParameter:
        default: Minimum Size
      ASGMaxSizeParameter:
        default: Maximum Size
      ASGDesiredCapacityParameter:
        default: Desired Capacity
Resources:
  EC2LaunchTemplateResource:
    Type: AWS::EC2::LaunchTemplate
    DeletionPolicy: Delete
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref 'InstanceTypeParameter'
        ImageId: !Ref 'ImageIdParameter'
        SecurityGroupIds:
          - !Select
            - '0'
            - !Ref 'LaunchTemplateSecurityGroupParameter'
        IamInstanceProfile:
          Name: !Ref 'SSMInstanceProfileName'
        TagSpecifications:
           - 
            ResourceType: 'instance'
            Tags:
              - Key: "DomainToJoin"
                Value: !Ref "DomainDNSName"
              - Key: "CloudWatchAgent"
                Value: "Yes"
              - Key: "CloudWatchConfig"
                Value: "IIS-Windows"
        UserData: !Base64
          Fn::Join:
            - ''
            - - "<powershell>\n"
              - 'Import-Module AWSPowerShell'
              - "\n"
              - '$instanceid = (Invoke-RestMethod -Method Get -Uri http://169.254.169.254/latest/meta-data/instance-id)'
              - "\n"
              - 'New-EC2Tag -Resource $instanceId -Tag @{Key="Name";Value=$env:COMPUTERNAME}'
              - "\n"
              - "</powershell>\n"
  ALBResource:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: !Ref 'ELBSchemeParameter'
      Subnets:
        - !Select
          - '0'
          - !Ref 'ELBSubnetParameter'
        - !Select
          - '1'
          - !Ref 'ELBSubnetParameter'
      SecurityGroups:
        - !Select
          - '0'
          - !Ref 'ELBSecurityGroupParameter'
  ALBTargetGroupResource:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Select
        - '0'
        - !Ref 'VpcIdParameter'
      HealthyThresholdCount: 5
      HealthCheckTimeoutSeconds: 120
      HealthCheckIntervalSeconds: 300
      UnhealthyThresholdCount: 10
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
  ALBListenerResource:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref 'ALBResource'
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'ALBTargetGroupResource'
  SNSTopicResource:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'SNSEndpointParameter'
          Protocol: email
  ASGResource:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref 'ASGMinSizeParameter'
      MaxSize: !Ref 'ASGMaxSizeParameter'
      DesiredCapacity: !Ref 'ASGDesiredCapacityParameter'
      HealthCheckType: ELB
      HealthCheckGracePeriod: 60
      Cooldown: 30
      LaunchTemplate:
        LaunchTemplateId: !Ref 'EC2LaunchTemplateResource'
        Version: !GetAtt 'EC2LaunchTemplateResource.LatestVersionNumber'
      VPCZoneIdentifier:
        - !Select
          - '0'
          - !Ref 'ASGSubnetParameter'
        - !Select
          - '1'
          - !Ref 'ASGSubnetParameter'
      TargetGroupARNs:
        - !Ref 'ALBTargetGroupResource'
      LifecycleHookSpecificationList:
        - LifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
          LifecycleHookName: DomainJoinLaunchHook
          HeartbeatTimeout: 600
          DefaultResult: CONTINUE
        - LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
          LifecycleHookName: DomainUnjoinLaunchHook
          HeartbeatTimeout: 300
          DefaultResult: ABANDON
      NotificationConfigurations:
        - NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_TERMINATE
          TopicARN: !Ref 'SNSTopicResource'
  DomainJoinEventBridgeResource:
    Type: AWS::Events::Rule
    Properties:
      State: ENABLED
      Description: EVB to join AD and unjoin from AD.
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance-terminate Lifecycle Action
        detail:
          AutoScalingGroupName:
            - !Ref 'ASGResource'
      Targets:
        - Arn: !Ref 'LifeCycleHookLambdaArn'
          Id: JoinUnjoinEBv1
          InputTransformer:
            InputPathsMap:
              instanceid: $.detail.EC2InstanceId
              lifecycletransition: $.detail.LifecycleTransition
              region: $.region
            InputTemplate: '"<instanceid>,<lifecycletransition>,<region>"'
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref 'LifeCycleHookLambdaArn'
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 'DomainJoinEventBridgeResource.Arn'
Outputs:
  ELBUrl:
    Description: DNS name of the ELB.
    Value: !GetAtt 'ALBResource.DNSName'
  LaunchTemplateId:
    Description: Launch template Id
    Value: !Ref 'EC2LaunchTemplateResource'
    Export:
      Name: !Sub '${AWS::StackName}-LaunchTemplateId'